name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  release:
    name: Release for ${{ matrix.os }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux
            target: x86_64-unknown-linux-musl
            binary: ci-transfer
          # - os: macos
          #   target: x86_64-apple-darwin
          #   binary: ci-transfer
          # - os: windows
          #   target: x86_64-pc-windows-msvc
          #   binary: ci-transfer.exe

    steps:
    - uses: actions/checkout@v2

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        target: ${{ matrix.target }}

    - name: Install musl-tools (Linux only)
      if: matrix.os == 'linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y musl-tools

    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release --target ${{ matrix.target }}

    - name: Rename binary
      run: |
        mv target/${{ matrix.target }}/release/${{ matrix.binary }} ci-transfer-${{ matrix.os }}${{ matrix.os == 'windows' && '.exe' || '' }}

    - name: Generate SHA256
      run: |
        sha256sum ci-transfer-${{ matrix.os }}${{ matrix.os == 'windows' && '.exe' || '' }} > ci-transfer-${{ matrix.os }}${{ matrix.os == 'windows' && '.exe' || '' }}.sha256

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ci-transfer-${{ matrix.os }}${{ matrix.os == 'windows' && '.exe' || '' }}
          ci-transfer-${{ matrix.os }}${{ matrix.os == 'windows' && '.exe' || '' }}.sha256
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
